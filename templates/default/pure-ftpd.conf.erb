############################################################
#                                                          #
#         Configuration file for pure-ftpd wrappers        #
#                                                          #
############################################################

# If you want to run Pure-FTPd with this configuration   
# instead of command-line options, please run the
# following command :
#
# /usr/sbin/pure-config.pl /etc/pure-ftpd/pure-ftpd.conf
#
# Please don't forget to have a look at documentation at
# http://www.pureftpd.org/documentation.shtml for a complete list of
# options.

# Cage in every user in his home directory
<%= "ChrootEveryone              yes" if node['pure-ftpd']['options']['enabled'].include? "ChrootEveryone" %>
<%= "ChrootEveryone              no" if node['pure-ftpd']['options']['disabled'].include? "ChrootEveryone" %>

# If the previous option is set to "no", members of the following group
# won't be caged. Others will be. If you don't want chroot()ing anyone,
# just comment out ChrootEveryone and TrustedGID.
<%= "TrustedGID                    #{node['pure-ftpd']['options']['TrustedGID']}" if node['pure-ftpd']['options']['TrustedGID'] %>

# Turn on compatibility hacks for broken clients
<%= "BrokenClientsCompatibility  yes" if node['pure-ftpd']['options']['enabled'].include? "BrokenClientsCompatibility" %>
<%= "BrokenClientsCompatibility  no" if node['pure-ftpd']['options']['disabled'].include? "BrokenClientsCompatibility" %>

# Maximum number of simultaneous users
<%= "MaxClientsNumber            #{node['pure-ftpd']['options']['MaxClientsNumber']}" if node['pure-ftpd']['options']['MaxClientsNumber'] %>

# Fork in background
<%= "Daemonize                   yes" if node['pure-ftpd']['options']['enabled'].include? "Daemonize" %>
<%= "Daemonize                   no" if node['pure-ftpd']['options']['disabled'].include? "Daemonize" %>

# Maximum number of sim clients with the same IP address
<%= "MaxClientsPerIP             #{node['pure-ftpd']['options']['MaxClientsPerIP']}" if node['pure-ftpd']['options']['MaxClientsPerIP'] %>

# If you want to log all client commands, set this to "yes".
# This directive can be duplicated to also log server responses.
<%= "VerboseLog                  yes" if node['pure-ftpd']['options']['enabled'].include? "VerboseLog" %>
<%= "VerboseLog                  no" if node['pure-ftpd']['options']['disabled'].include? "VerboseLog" %>

# List dot-files even when the client doesn't send "-a".
<%= "DisplayDotFiles             yes" if node['pure-ftpd']['options']['enabled'].include? "DisplayDotFiles" %>
<%= "DisplayDotFiles             no" if node['pure-ftpd']['options']['disabled'].include? "DisplayDotFiles" %>

# Don't allow authenticated users - have a public anonymous FTP only.
<%= "AnonymousOnly               yes" if node['pure-ftpd']['options']['enabled'].include? "AnonymousOnly" %>
<%= "AnonymousOnly               no" if node['pure-ftpd']['options']['disabled'].include? "AnonymousOnly" %>

# Disallow anonymous connections. Only allow authenticated users.
<%= "NoAnonymous                 yes" if node['pure-ftpd']['options']['enabled'].include? "NoAnonymous" %>
<%= "NoAnonymous                 no" if node['pure-ftpd']['options']['disabled'].include? "NoAnonymous" %>

# Syslog facility (auth, authpriv, daemon, ftp, security, user, local*)
# The default facility is "ftp". "none" disables logging.
<%= "SyslogFacility              #{node['pure-ftpd']['options']['SyslogFacility']}" if node['pure-ftpd']['options']['SyslogFacility'] %>

# Display fortune cookies
<%= "FortunesFile              #{node['pure-ftpd']['options']['FortunesFile']}" if node['pure-ftpd']['options']['FortunesFile'] %>

# Don't resolve host names in log files. Logs are less verbose, but 
# it uses less bandwidth. Set this to "yes" on very busy servers or
# if you don't have a working DNS.
<%= "DontResolve                 yes" if node['pure-ftpd']['options']['enabled'].include? "DontResolve" %>
<%= "DontResolve                 no" if node['pure-ftpd']['options']['disabled'].include? "DontResolve" %>

# Maximum idle time in minutes (default = 15 minutes)
<%= "MaxIdleTime                 #{node['pure-ftpd']['options']['MaxIdleTime']}" if node['pure-ftpd']['options']['MaxIdleTime'] %>

# LDAP configuration file (see README.LDAP)
<%= "LDAPConfigFile                 #{node['pure-ftpd']['ldap.conf']}" unless node['pure-ftpd']['auth']['ldap']['enabled'] == "no" %>

# MySQL configuration file (see README.MySQL)
<%= "MySQLConfigFile                 #{node['pure-ftpd']['mysql.conf']}" unless node['pure-ftpd']['auth']['mysql']['enabled'] == "no" %>

# Postgres configuration file (see README.PGSQL)
<%= "PGSQLConfigFile                 #{node['pure-ftpd']['postgresql.conf']}" unless node['pure-ftpd']['auth']['postgresql']['enabled'] == "no" %>

# PureDB user database (see README.Virtual-Users)
<%= "PureDB                 #{node['pure-ftpd']['puredb.conf']}" unless node['pure-ftpd']['auth']['puredb']['enabled'] == "no" %>

# Path to pure-authd socket (see README.Authentication-Modules)
<% if node['pure-ftpd']['options']['ExtAuth'] %>
ExtAuth <%= node['pure-ftpd']['options']['ExtAuth'] %>
<% end %>

# If you want to enable PAM authentication, uncomment the following line
<%= "PAMAuthentication             yes" if node['pure-ftpd']['options']['enabled'].include? "PAMAuthentication" %>
<%= "PAMAuthentication             no" if node['pure-ftpd']['options']['disabled'].include? "PAMAuthentication" %>

# If you want simple Unix (/etc/passwd) authentication, uncomment this
<%= "UnixAuthentication            yes" if node['pure-ftpd']['options']['enabled'].include? "UnixAuthentication" %>
<%= "UnixAuthentication            no" if node['pure-ftpd']['options']['disabled'].include? "UnixAuthentication" %>

# Please note that LDAPConfigFile, MySQLConfigFile, PAMAuthentication and
# UnixAuthentication can be used only once, but they can be combined
# together. For instance, if you use MySQLConfigFile, then UnixAuthentication,
# the SQL server will be asked. If the SQL authentication fails because the
# user wasn't found, another try # will be done with /etc/passwd and
# /etc/shadow. If the SQL authentication fails because the password was wrong,
# the authentication chain stops here. Authentication methods are chained in
# the order they are given. 

# 'ls' recursion limits. The first argument is the maximum number of
# files to be displayed. The second one is the max subdirectories depth
<%= "LimitRecursion              #{node['pure-ftpd']['options']['LimitRecursion']}" if node['pure-ftpd']['options']['LimitRecursion'] %>

# Are anonymous users allowed to create new directories ?
<%= "AnonymousCanCreateDirs      yes" if node['pure-ftpd']['options']['enabled'].include? "AnonymousCanCreateDirs" %>
<%= "AnonymousCanCreateDirs      no" if node['pure-ftpd']['options']['disabled'].include? "AnonymousCanCreateDirs" %>

# If the system is more loaded than the following value,
# anonymous users aren't allowed to download.
<%= "MaxLoad                     #{node['pure-ftpd']['options']['MaxLoad']}" if node['pure-ftpd']['options']['MaxLoad'] %>

# Port range for passive connections replies. - for firewalling.
<%= "PassivePortRange          #{node['pure-ftpd']['options']['PassivePortRange']}" if node['pure-ftpd']['options']['PassivePortRange'] %>

# Force an IP address in PASV/EPSV/SPSV replies. - for NAT.
# Symbolic host names are also accepted for gateways with dynamic IP
# addresses.
<%= "ForcePassiveIP                #{node['pure-ftpd']['options']['ForcePassiveIP']}" if node['pure-ftpd']['options']['ForcePassiveIP'] %>

# Upload/download ratio for anonymous users.
<%= "AnonymousRatio                #{node['pure-ftpd']['options']['AnonymousRatio']}" if node['pure-ftpd']['options']['AnonymousRatio'] %>

# Upload/download ratio for all users.
# This directive superscedes the previous one.
<%= "UserRatio                 #{node['pure-ftpd']['options']['UserRatio']}" if node['pure-ftpd']['options']['UserRatio'] %>

# Disallow downloading of files owned by "ftp", ie.
# files that were uploaded but not validated by a local admin.
<%= "AntiWarez                   yes" if node['pure-ftpd']['options']['enabled'].include? "AntiWarez" %>
<%= "AntiWarez                   no" if node['pure-ftpd']['options']['disabled'].include? "AntiWarez" %>

# IP address/port to listen to (default=all IP and port 21).
<%= "Bind                      #{node['pure-ftpd']['options']['Bind']}" if node['pure-ftpd']['options']['Bind'] %>

# Maximum bandwidth for anonymous users in KB/s
<%= "AnonymousBandwidth            #{node['pure-ftpd']['options']['AnonymousBandwidth']}" if node['pure-ftpd']['options']['AnonymousBandwidth'] %>

# Maximum bandwidth for *all* users (including anonymous) in KB/s
# Use AnonymousBandwidth *or* UserBandwidth, both makes no sense.
<%= "UserBandwidth             #{node['pure-ftpd']['options']['UserBandwidth']}" if node['pure-ftpd']['options']['UserBandwidth'] %>

# File creation mask. <umask for files>:<umask for dirs> .
# 177:077 if you feel paranoid.
<%= "Umask                       #{node['pure-ftpd']['options']['Umask']}" if node['pure-ftpd']['options']['Umask'] %>

# Minimum UID for an authenticated user to log in.
<%= "MinUID                      #{node['pure-ftpd']['options']['MinUID']}" if node['pure-ftpd']['options']['MinUID'] %>

# Do not use the /etc/ftpusers file to disable accounts. We're already
# using MinUID to block users with uid < 500
<%= "UseFtpUsers yes" if node['pure-ftpd']['options']['enabled'].include? "UseFtpUsers" %>
<%= "UseFtpUsers no" if node['pure-ftpd']['options']['disabled'].include? "UseFtpUsers" %>

# Allow FXP transfers for authenticated users.
<%= "AllowUserFXP                yes" if node['pure-ftpd']['options']['enabled'].include? "AllowUserFXP" %>
<%= "AllowUserFXP                no" if node['pure-ftpd']['options']['disabled'].include? "AllowUserFXP" %>

# Allow anonymous FXP for anonymous and non-anonymous users.
<%= "AllowAnonymousFXP           yes" if node['pure-ftpd']['options']['enabled'].include? "AllowAnonymousFXP" %>
<%= "AllowAnonymousFXP           no" if node['pure-ftpd']['options']['disabled'].include? "AllowAnonymousFXP" %>

# Users can't delete/write files beginning with a dot ('.')
# even if they own them. If TrustedGID is enabled, this group
# will have access to dot-files, though.
<%= "ProhibitDotFilesWrite       yes" if node['pure-ftpd']['options']['enabled'].include? "ProhibitDotFilesWrite" %>
<%= "ProhibitDotFilesWrite       no" if node['pure-ftpd']['options']['disabled'].include? "ProhibitDotFilesWrite" %>

# Prohibit *reading* of files beginning with a dot (.history, .ssh...)
<%= "ProhibitDotFilesRead        yes" if node['pure-ftpd']['options']['enabled'].include? "ProhibitDotFilesRead" %>
<%= "ProhibitDotFilesRead        no" if node['pure-ftpd']['options']['disabled'].include? "ProhibitDotFilesRead" %>

# Never overwrite files. When a file whoose name already exist is uploaded,
# it get automatically renamed to file.1, file.2, file.3, ...
<%= "AutoRename                  yes" if node['pure-ftpd']['options']['enabled'].include? "AutoRename" %>
<%= "AutoRename                  no" if node['pure-ftpd']['options']['disabled'].include? "AutoRename" %>

# Disallow anonymous users to upload new files (no = upload is allowed)
<%= "AnonymousCantUpload         yes" if node['pure-ftpd']['options']['enabled'].include? "AnonymousCantUpload" %>
<%= "AnonymousCantUpload         no" if node['pure-ftpd']['options']['disabled'].include? "AnonymousCantUpload" %>

# Only connections to this specific IP address are allowed to be
# non-anonymous. You can use this directive to open several public IPs for
# anonymous FTP, and keep a private firewalled IP for remote administration.
# You can also only allow a non-routable local IP (like 10.x.x.x) to
# authenticate, and keep a public anon-only FTP server on another IP.
<%= "TrustedIP                  #{node['pure-ftpd']['options']['TrustedIP']}" if node['pure-ftpd']['options']['TrustedIP'] %>

# If you want to add the PID to every logged line, uncomment the following
# line.
<%= "LogPID                     yes" if node['pure-ftpd']['options']['enabled'].include? "LogPID" %>
<%= "LogPID                     no" if node['pure-ftpd']['options']['disabled'].include? "LogPID" %>

# Create an additional log file with transfers logged in a Apache-like format :
# fw.c9x.org - jedi [13/Dec/1975:19:36:39] "GET /ftp/linux.tar.bz2" 200 21809338
# This log file can then be processed by www traffic analyzers.
AltLog                     clf:/var/log/pureftpd.log

# Create an additional log file with transfers logged in a format optimized
# for statistic reports.
# AltLog                     stats:/var/log/pureftpd.log

# Create an additional log file with transfers logged in the standard W3C
# format (compatible with most commercial log analyzers)
# AltLog                     w3c:/var/log/pureftpd.log

# Disallow the CHMOD command. Users can't change perms of their files.
<%= "NoChmod                     yes" if node['pure-ftpd']['options']['enabled'].include? "NoChmod" %>
<%= "NoChmod                     no" if node['pure-ftpd']['options']['disabled'].include? "NoChmod" %>

# Allow users to resume and upload files, but *NOT* to delete them.
<%= "KeepAllFiles                yes" if node['pure-ftpd']['options']['enabled'].include? "KeepAllFiles" %>
<%= "KeepAllFiles                no" if node['pure-ftpd']['options']['disabled'].include? "KeepAllFiles" %>

# Automatically create home directories if they are missing
<%= "CreateHomeDir               yes" if node['pure-ftpd']['options']['enabled'].include? "CreateHomeDir" %>
<%= "CreateHomeDir               no" if node['pure-ftpd']['options']['disabled'].include? "CreateHomeDir" %>



# Enable virtual quotas. The first number is the max number of files.
# The second number is the max size of megabytes.
# So 1000:10 limits every user to 1000 files and 10 Mb.

<%= "Quota                       #{node['pure-ftpd']['options']['Quota']}" if node['pure-ftpd']['options']['Quota'] %>

# If your pure-ftpd has been compiled with standalone support, you can change
# the location of the pid file. The default is /var/run/pure-ftpd.pid
<%= "PIDFile                       #{node['pure-ftpd']['options']['PIDFile']}" if node['pure-ftpd']['options']['PIDFile'] %>

# If your pure-ftpd has been compiled with pure-uploadscript support,
# this will make pure-ftpd write info about new uploads to
# /var/run/pure-ftpd.upload.pipe so pure-uploadscript can read it and
# spawn a script to handle the upload.
<%= "CallUploadScript yes" if node['pure-ftpd']['options']['enabled'].include? "CallUploadScript" %>
<%= "CallUploadScript no" if node['pure-ftpd']['options']['disabled'].include? "CallUploadScript" %>

# This option is useful with servers where anonymous upload is 
# allowed. As /var/ftp is in /var, it save some space and protect 
# the log files. When the partition is more that X percent full,
# new uploads are disallowed.
<%= "MaxDiskUsage               #{node['pure-ftpd']['options']['MaxDiskUsage']}" if node['pure-ftpd']['options']['MaxDiskUsage'] %>

# Set to 'yes' if you don't want your users to rename files.
<%= "NoRename                  yes" if node['pure-ftpd']['options']['enabled'].include? "NoRename" %>
<%= "NoRename                  no" if node['pure-ftpd']['options']['disabled'].include? "NoRename" %>

# Be 'customer proof' : workaround against common customer mistakes like
# 'chmod 0 public_html', that are valid, but that could cause ignorant
# customers to lock their files, and then keep your technical support busy
# with silly issues. If you're sure all your users have some basic Unix
# knowledge, this feature is useless. If you're a hosting service, enable it.
<%= "CustomerProof              yes" if node['pure-ftpd']['options']['enabled'].include? "CustomerProof" %>
<%= "CustomerProof              no" if node['pure-ftpd']['options']['disabled'].include? "CustomerProof" %>

# Per-user concurrency limits. It will only work if the FTP server has
# been compiled with --with-peruserlimits (and this is the case on
# most binary distributions) .
# The format is : <max sessions per user>:<max anonymous sessions>
# For instance, 3:20 means that the same authenticated user can have 3 active
# sessions max. And there are 20 anonymous sessions max.
<%= "PerUserLimits            #{node['pure-ftpd']['options']['PerUserLimits']}" if node['pure-ftpd']['options']['PerUserLimits'] %>

# When a file is uploaded and there is already a previous version of the file
# with the same name, the old file will neither get removed nor truncated.
# Upload will take place in a temporary file and once the upload is complete,
# the switch to the new version will be atomic. For instance, when a large PHP
# script is being uploaded, the web server will still serve the old version and
# immediatly switch to the new one as soon as the full file will have been
# transfered. This option is incompatible with virtual quotas.
<%= "NoTruncate               yes" if node['pure-ftpd']['options']['enabled'].include? "NoTruncate" %>
<%= "NoTruncate               no" if node['pure-ftpd']['options']['disabled'].include? "NoTruncate" %>

# This option can accept three values :
# 0 : disable SSL/TLS encryption layer (default).
# 1 : accept both traditional and encrypted sessions.
# 2 : refuse connections that don't use SSL/TLS security mechanisms,
#     including anonymous sessions.
# Do _not_ uncomment this blindly. Be sure that :
# 1) Your server has been compiled with SSL/TLS support (--with-tls),
# 2) A valid certificate is in place,
# 3) Only compatible clients will log in.
<%= "TLS                      #{node['pure-ftpd']['options']['TLS']}" if node['pure-ftpd']['options']['TLS'] %>

# Listen only to IPv4 addresses in standalone mode (ie. disable IPv6)
# By default, both IPv4 and IPv6 are enabled.
<%= "IPV4Only                 yes" if node['pure-ftpd']['options']['enabled'].include? "IPV4Only" %>
<%= "IPV4Only                 no" if node['pure-ftpd']['options']['disabled'].include? "IPV4Only" %>

# Listen only to IPv6 addresses in standalone mode (ie. disable IPv4)
# By default, both IPv4 and IPv6 are enabled.
<%= "IPV6Only                 yes" if node['pure-ftpd']['options']['disabled'].include? "IPV6Only" %>
<%= "IPV6Only                 no" if node['pure-ftpd']['options']['enabled'].include? "IPV6Only" %>

# UTF-8 support for file names (RFC 2640)
# Define charset of the server filesystem and optionnally the default charset
# for remote clients if they don't use UTF-8.
# Works only if pure-ftpd has been compiled with --with-rfc2640
<%= "FileSystemCharset        #{node['pure-ftpd']['options']['FSCharset']}" if node['pure-ftpd']['options']['FSCharset'] %>
<%= "ClientCharset            #{node['pure-ftpd']['options']['ClientCharset']}" if node['pure-ftpd']['options']['ClientCharset'] %>
